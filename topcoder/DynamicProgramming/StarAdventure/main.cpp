/*
 * =====================================================================================
 *
 *       Filename:  main.c
 *
 *    Description:  
 *
 *        Version:  1.0
 *        Created:  2012/04/18 16:56:38
 *       Revision:  none
 *       Compiler:  gcc
 *
 *         Author:  TerryLu (), terrylu87@gmail.com
 *        Company:  TerryLu's working house
 *
 * =====================================================================================
 */

/* This is a problem from top coder */
/* http://community.topcoder.com/stat?c=problem_statement&pm=2940&rd=5854 */

#include <iostream>
#include <string>
#include <vector>
#include <string.h>
//#include <stdlib.h>
using namespace std;

/* test data */
// 0)
const string TEST_MAP_0[]={"01",\
                           "11"};
// Returns: 3

// 1)	
const string TEST_MAP_1[]={"0999999999"\
                          ,"9999999999"\
                          ,"9999999999"\
                          ,"9999999999"\
                          ,"9999999999"\
                          ,"9999999999"\
                          ,"9999999999"\
                          ,"9999999999"\
                          ,"9999999999"\
		          ,"9999999999"};
// Returns: 450

// 2)	
const string TEST_MAP_2[]={"012"\
                          ,"012"\
                          ,"012"\
                          ,"012"\
                          ,"012"\
                          ,"012"\
                          ,"012"};
// Returns: 21

// 3)	
const string TEST_MAP_3[]= {"0123456789",\
                            "1123456789",\
                            "2223456789",\
                            "3333456789",\
                            "4444456789",\
                            "5555556789",\
                            "6666666789",\
                            "7777777789",\
                            "8888888889",\
                            "9999999999"};
// Returns: 335

// 4
const string TEST_MAP_4[]={"0020665880",\
			   "2143111805",\
			   "4814947090",\
			   "0598391082",\
			   "1892148932",\
			   "3086008656",\
			   "7965989615",\
			   "6417900003",\
			   "5808937734",\
			   "5079795554"};
// Returns: 276

// 5
const string TEST_MAP_5[]={"0333111111",\
			   "1300000000",\
			   "1330999990",\
			   "1030999990",\
			   "1030999990",\
			   "1010999990",\
			   "1011000000",\
			   "1111111111"};
// Returns: 195

// 6
const string TEST_MAP_6[]={"0000000999",\
			   "0000000999",\
			   "0000000999",\
			   "0000000999",\
			   "0000000999",\
			   "0000000999",\
			   "0000000999",\
			   "0000000999",\
			   "0000000999",\
			   "0000000999"};
// Returns: 270

// 7
const string TEST_MAP_7[]= {"01296289856427627583990950344462777968520299686111", "43022678573840646287258869226707798201798017874000", "99091250801748059146336878382798759607881205562137", "11816984638204727415560787687605639156017897697531", "40661158878887808386818330156139353870554316450915", "87052499187460711490688086746167081362791796225002", "01947863172930252103852068986869791124194119575635", "99375048221224116088159793256443275472445959843964", "11665386993007983373118551550102818759574894279931", "48090805426836021383141239785757526046731211113294", "86931124195333229447180226612761828264433017855583", "43007800221674000083556754623498399774267936433906", "21078141359092519508025805250847051837138333400353", "69814044543738406683645653644949538893806585184212", "33943151758342660866144437241447718020681869707123", "50243078184094857523180809090799328330438402374985", "08566426434568208825612408902362449478270237075064", "71533000131548124383962607058956508620811039545105", "20341652438371053718985796928981187335294991655455", "32591191176597647230235331857688048952376257444637", "16582644947654229541198086173371469690934326060339", "43124097437898104373318455127213940834699361055691", "62109725462158969293897516214824651754684697404632", "41354365968573108227159781544593511305624482527810", "56772548929537378930633648170871233448838613375608", "72932196280118065569902687908277689193692143155132", "36554232324581780762499044939284712416311431013315", "43918362809584311849172602638378407054514114668570", "26606123807258572332229875931079192203431543536195", "04108170620211326072873780115311132179461595475354", "94430952267345272347039904716259706352013871176173", "33286418782466966674782766282825306942997293358752", "23880255384711981372172273791039195381990304632705", "92532741675774493706512349230175416748421110202957", "35004464257114530864401047389205307624260455200898", "17950825896557004718010946951249401962969911683288", "67785299551575462998432452665773214861922053784778", "43774869214514650029563681659442559622835580708379", "17475976964086926143045639786515703547681091892581", "85504670738884583411475863522218063584869461958175", "89296969879850466941406364976282304903284232178276", "61851183935100918229914862281948792834737254946936", "84428201578927374215319915034895892723100107765542", "23452740367308898111237986434700239035719988453296", "27395691783361182628932624730123659384639699682261", "27017054390616715972814318569994425773869622949666", "45724534900418807729724328199044963573348604952485", "57360759001656212967724321892346348019285322384403", "78453823856605885318254243089144862775794590108155", "65543037571824365816297258726224394890459038188189"};
// Returns: 1898

// 8
const string TEST_MAP_8[]= {"00693669159997478717778648582603914797652076486850", "68817386629579884745722156849341121359485125480915", "37968289836814960907094044132341052989896107226755", "86895720635229745565213319265598043883682655439495", "33818211987074676317501654547219162389456481230216", "02874705235282076476141585650587868890105517957471", "10737211974069927291287563045434190363794232879343", "20703458849323062517448893137874164819598835239055", "45819519436257824388527439203683110600404707333342", "77931581078166078445441258390939807865530457996636", "22095655370523759645861409413670023403598338933870", "42132642198727737836570926767811000444705010037312", "49926369146474927246647237224833297420301025712190", "80024196837285556466632221288318044342602832977675", "65608381933525222486611331960862265447565022817624", "84074129403083543797335290735380718078226052695783", "43346838561357839875557773706930305304178932061502", "64883575558985586360979574190777446347166664135214", "71471045332275981742885891397227696357102461369973", "75180075181819753152264844525597618628554450390846", "84168410204764062506497791514386123364954831219193", "82927386306474528241753952180879271040110427426370", "56599357071146265278453609957196752543696438662914", "96116835404704857717738750994303536288215702881764", "38322436683241882962187172837218941259485733287680", "53596567898860042382294941406926481968712091691735", "69271100616750779581771783666099255235318332442823", "11719696126824596039931511591493552418140686046207", "05415037480408015534194479455937773472699175271746", "57069784181182556852458355682216748144166509970378", "06267474299770623728419367611480045111590968306663", "27872588471071017418326145092805457304280398626497", "76994444645440779071039175008604801252649993952757", "90365670887750470693354332648321443733552198030582", "68076330865609307956012913022982125432653089504810", "60514045946127816146012957645453768651086704761229", "06474943087796332109316657385668470203864310163306", "23171289986939738283780942032565282222484343813558", "36682444118015418195138292852077486658972382509307", "89306986519065691950628362911349248089621599295093", "10912026400452564652080551751342810419982217353653", "45237704808365280879779624283284449535485988500896", "66984095965967905697053685572414945486948949681394", "98464633999480328324670474690665673226270377267003", "40600456371428156827974327091434045212850211525688", "93311454412929234603830464901104014259841214712690", "17854868654786410328048873497221152512941231274978", "21807726510754930738965027381666600312478197788248", "09372834166561709215843086380713567040272541666729", "30353099729419017991143177280604048377412663635406"};
// Returns: 1918

int mostStars(const string arr[],int size)
{
    int row = size;
    int col = arr[0].size();
    short value_map[row][col];
    int i,j,k,r,l,m,n;

    int ret=0;
    if(row<=3 || col<=3){
	for(i=0;i<row;++i) for(j=0;j<col;++j) ret+=value_map[i][j];
	return ret;
    }
    
    // convert the string array into a two dimensional short array
    for(i=0;i<row;++i) for(j=0;j<col;++j) value_map[i][j] = arr[i][j]-'0';

    int max_val_map_0[col][col][col];
    int max_val_map_1[col][col][col];
    int (*cur_map)[col][col][col];
    int (*pre_map)[col][col][col];
    memset(max_val_map_0,0,sizeof(int)*col*col*col);

    cur_map = &max_val_map_0;
    for(i=0;i<col;++i) for(j=i+1;j<col;++j) for(k=j+1;k<col;++k){
		int sum = 0;
		for(l=0;l<=k;++l)
		    sum += value_map[0][l];
		(*cur_map)[i][j][k] = sum;
	    }

    pre_map = cur_map;
    cur_map = &max_val_map_1;
    for(r=1;r<row;++r){
	memset(cur_map,0,sizeof(int)*col*col*col);
	for(i=0;i<col;++i){
	    for(j=i+1;j<col;++j){
		for(k=j+1;k<col;++k){
		    int value = (*pre_map)[i][j][k];
		    int add_l = 0;
		    int add_m = 0;
		    int add_n = 0;
		    for(l=i;l<j;++l){
			add_l += value_map[r][l];
			add_m = 0;
			for(m=j;m<k;++m){
			    add_m += value_map[r][m];
			    add_n = 0;
			    for(n=k;n<col;++n){
				add_n += value_map[r][n];
				int old_val = (*cur_map)[l][m][n];
				int new_val = value + add_l + add_m + add_n;
				(*cur_map)[l][m][n] = old_val > new_val ? old_val : new_val;
			    }
			}
		    }
		}
	    }
	}
	int (*t_map)[col][col][col];
	t_map = pre_map;
	pre_map = cur_map;
	cur_map = t_map;
    }

    ret = (*pre_map)[col-3][col-2][col-1];
    cout << ret << endl;
    return ret;
}

#define TEST(DATA) mostStars(DATA,sizeof(DATA)/sizeof(string));

int main(int argc,char ** argv)
{
    cout << "StarAdventure" << endl;

    TEST(TEST_MAP_0);
    TEST(TEST_MAP_1);
    TEST(TEST_MAP_2);
    TEST(TEST_MAP_3);
    TEST(TEST_MAP_4);
    TEST(TEST_MAP_5);
    TEST(TEST_MAP_6);
    TEST(TEST_MAP_7);
    TEST(TEST_MAP_8);

    return 0;
}
